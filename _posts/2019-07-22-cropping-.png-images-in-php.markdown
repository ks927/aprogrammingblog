---
layout: post
title:  "How to Resize .png Pictures With Transparent Backgrounds in PHP"
subtitle: "PHP Image Functions Explained"
date:   2019-07-22 10:40:45 -0500
categories: [PHP]
---

# Demystifying PHP's Image Functions

The problem: I needed to find a way to upload jpg/gif/png formatted pictures to our server, crop, and resize them to be used as icons. 

The solution: There are plenty of resources available online for jpg and gif pictures. Png files, specifically with transparent backgrounds, proved a more challenging assignment. Using several StackOverflow answers, PHP manual pages, and brute force, this is the most lightweight solution that worked for me. I will do my best to explain the why and how, though my understanding is murky at best. I hope this post can save someone even a fraction of the time it took me to arrive at the final solution.

I will only address the server-side implementation. On the client-side, I used JQuery's [Cropper library](https://fengyuanchen.github.io/jquery-cropper/) to manipulate the picture. So the `$src_w`, `$src_h`, `$src_x` and `$src_y` used in the `imagecopyresampled()` function were received as $_POST variables by my endpoint. For simplification purposes, I've replaced those variables here to demonstrate how resizing works in the most straightforward way possible.

![Image Functions]({{ site.url }}/assets/images/cropped_img.png "Image Functions"){:class="img-landscape"}


`imagecreatefrompng($filename)` - Returns an ‘image resource identifier’ (or a special type of object that stores information about the image you’re creating) representing the image obtained from the $filename. 

`imagecreatetruecolor($width, $height)` - Returns an image identifier representing a black image of the specified dimensions. [Stackoverflow Answer](https://stackoverflow.com/questions/18574743/what-is-an-image-resource-identifier)

`Imagecolorallocatealpha($img, $red(0-255), $blue(0-255), $green(0-255), $alpha(0-127)` - allocates a color with transparency parameter ($alpha) for the image object created from imagecreatetruecolor(). 0 is opaque and 127 is transparent.

`imagecolortransparent($img, $color)` - gets or sets the transparent color from imagecolorallocatealpha() in the given image created by the imagecreatetruecolor().

`imagecopyresampled($dst_img, $src_img, $dst_x, $dst_y, $src_x, $src_y, $dst_w, $dst_h, $src_w, $src_h)` - copies $src_img at coordinates ($src_x, $src_y) with dimensions $src_w, $src_h onto $dst_img retaining clarity despite shrinking the size. So in this case, we are resizing a 1500x1500 image to 100x100.
